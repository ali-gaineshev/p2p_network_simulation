
so in ns3 you will have 

ns-allinone-3.43
    - ns-3.43
        -scratch
            network-sim.cc
            CMakeLists.txt
            - subdir
                p2p-packet.h
                p2p-packet.cc
                p2p-application.h
                p2p-application.cc


CMakeLists.txt

I had to add these two lines to properly compile this in the line 67 
```
list(APPEND source_files ${CMAKE_CURRENT_SOURCE_DIR}/subdir/p2p/p2p-packet.cc)
list(APPEND source_files ${CMAKE_CURRENT_SOURCE_DIR}/subdir/p2p/p2p-application.cc)
```

network-sim.cc

where the actual sim is gonna occur , its a mess rn but i am just trying to test stuff
only file w a main. we eventually will need to do more work and figure out how we want to conenct
stuff but that is a later issue 

p2p-packet

i have defined a p2p packet with ping, pong, query and query hit
each packet is what we will be sending with diff feilds in its
very much wip but am doing it like this for now so we can get flooding first then modify

p2p-application

now that packet is semi working, its time to write the basic application stuff to attach
to each node. this will be routing and bahaviours (ex. if they recive a ping, send a pong)

eventially we will have the flooding done. this will be what we change when we do other ones


after initial compile and build i am just running this command 

../../ns-allinone-3.43 % ./ns-3.43/ns3 build && ./ns-3.43/ns3 run scratch/network-sim (compile and run)
../../ns-allinone-3.43 % ./netanim-3.109/NetAnim (launch netanim)


note: i did have to update all my paths in c_cpp_properties.json as well as tasks.json 

CURRENT OUTPUT 

entering code
Invalid IP detected for Node 1 neighbor: 102.102.102.102
Starting simulation...
Current neighbors: 
SendingNode: 10.1.1.1
Sent 0 packet to 10.1.1.2

rp: at 10.1.1.2 from 10.1.1.1 of type 0
rp: forwarding packet from 10.1.1.2 to 10.1.1.4

rp: at 10.1.1.4 from 10.1.1.2 of type 0
rp: forwarding packet from 10.1.1.4 to 10.1.1.6

rp: at 10.1.1.6 from 10.1.1.4 of type 0
rp: forwarding packet from 10.1.1.6 to 10.1.1.8

rp: at 10.1.1.8 from 10.1.1.6 of type 0
Sent 2 packet to 10.1.1.2

rp: at 10.1.1.2 from 10.1.1.1 of type 2
rp: forwarding packet from 10.1.1.2 to 10.1.1.4

rp: at 10.1.1.4 from 10.1.1.2 of type 2
rp: forwarding packet from 10.1.1.4 to 10.1.1.6

rp: at 10.1.1.6 from 10.1.1.4 of type 2
rp: query hit at 3 !!!!!!
in QH: curaddy 10.1.1.6 prevhop 10.1.1.4 type 2
QH from 10.1.1.6 back to 10.1.1.4 type 3 with ttl 5

rp: at 10.1.1.4 from 10.1.1.2 of type 3
in FQH: curaddy 10.1.1.4 prevhop 10.1.1.2 type 3
FQH from 10.1.1.4 to 10.1.1.2 with ttl 5

rp: at 10.1.1.2 from 10.1.1.1 of type 3
in FQH: curaddy 10.1.1.2 prevhop 10.1.1.1 type 3
FQH from 10.1.1.2 to 10.1.1.1 with ttl 5

rp: at 10.1.1.1 from 0.0.0.0 of type 3
in FQH: curaddy 10.1.1.1 prevhop 0.0.0.0 type 3
back to sender peer 10.1.1.1
Sent 2 packet to 10.1.1.2

rp: at 10.1.1.2 from 10.1.1.1 of type 2
rp: forwarding packet from 10.1.1.2 to 10.1.1.4

rp: at 10.1.1.4 from 10.1.1.2 of type 2
rp: query hit at 2 !!!!!!
in QH: curaddy 10.1.1.4 prevhop 10.1.1.2 type 2
QH from 10.1.1.4 back to 10.1.1.2 type 3 with ttl 6

rp: at 10.1.1.2 from 10.1.1.1 of type 3
in FQH: curaddy 10.1.1.2 prevhop 10.1.1.1 type 3
FQH from 10.1.1.2 to 10.1.1.1 with ttl 6

rp: at 10.1.1.1 from 0.0.0.0 of type 3
in FQH: curaddy 10.1.1.1 prevhop 0.0.0.0 type 3
back to sender peer 10.1.1.1
Sent 2 packet to 10.1.1.2

rp: at 10.1.1.2 from 10.1.1.1 of type 2
rp: forwarding packet from 10.1.1.2 to 10.1.1.4

rp: at 10.1.1.4 from 10.1.1.2 of type 2
rp: forwarding packet from 10.1.1.4 to 10.1.1.6

rp: at 10.1.1.6 from 10.1.1.4 of type 2
rp: forwarding packet from 10.1.1.6 to 10.1.1.8

rp: at 10.1.1.8 from 10.1.1.6 of type 2
rp: query hit at 4 !!!!!!
in QH: curaddy 10.1.1.8 prevhop 10.1.1.6 type 2
QH from 10.1.1.8 back to 10.1.1.6 type 3 with ttl 4

rp: at 10.1.1.6 from 10.1.1.4 of type 3
in FQH: curaddy 10.1.1.6 prevhop 10.1.1.4 type 3
FQH from 10.1.1.6 to 10.1.1.4 with ttl 4

rp: at 10.1.1.4 from 10.1.1.2 of type 3
in FQH: curaddy 10.1.1.4 prevhop 10.1.1.2 type 3
FQH from 10.1.1.4 to 10.1.1.2 with ttl 4

rp: at 10.1.1.2 from 10.1.1.1 of type 3
in FQH: curaddy 10.1.1.2 prevhop 10.1.1.1 type 3
FQH from 10.1.1.2 to 10.1.1.1 with ttl 4

rp: at 10.1.1.1 from 0.0.0.0 of type 3
in FQH: curaddy 10.1.1.1 prevhop 0.0.0.0 type 3
back to sender peer 10.1.1.1
Simulation complete


we currently have nodes finding the sink and then returning to the sender. check my comments to see what logic i had to change it was adding a backward path


TODO 

modify this to be a query, if we want dynamic we will have to modify alot to make a peer join initialize then join its c_cpp_properties
currently thihs is being ran as if the netowrk is static and already linked up befor eth esumilation